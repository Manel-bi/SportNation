// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportNation2.Data;

#nullable disable

namespace SportNation2.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230605120639_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("SportNation2.Data.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("SportId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("SportNation2.Data.Models.CompetitionEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaximumAge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumAge")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionEvents");
                });

            modelBuilder.Entity("SportNation2.Data.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompetitionEventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionEventId");

                    b.HasIndex("UserId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("SportNation2.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Basic"
                        });
                });

            modelBuilder.Entity("SportNation2.Data.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sport");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SportName = "Boxe"
                        },
                        new
                        {
                            Id = 2,
                            SportName = "Judo"
                        },
                        new
                        {
                            Id = 3,
                            SportName = "Lutte"
                        },
                        new
                        {
                            Id = 4,
                            SportName = "Natation"
                        },
                        new
                        {
                            Id = 5,
                            SportName = "Triathlon"
                        },
                        new
                        {
                            Id = 6,
                            SportName = "Badminton"
                        },
                        new
                        {
                            Id = 7,
                            SportName = "Plongeon"
                        },
                        new
                        {
                            Id = 8,
                            SportName = "Tennis"
                        },
                        new
                        {
                            Id = 9,
                            SportName = "Tennis de table"
                        },
                        new
                        {
                            Id = 10,
                            SportName = "Cyclisme"
                        });
                });

            modelBuilder.Entity("SportNation2.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@sportnation.com",
                            Genre = 0,
                            HashedPassword = "F2D81A260DEA8A100DD517984E53C56A7523D96942A834B9CDC249BD4E8C7AA9"
                        });
                });

            modelBuilder.Entity("SportNation2.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SportNation2.Data.Models.Competition", b =>
                {
                    b.HasOne("SportNation2.Data.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("SportNation2.Data.Models.CompetitionEvent", b =>
                {
                    b.HasOne("SportNation2.Data.Models.Competition", "Competition")
                        .WithMany("CompetitionEvents")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("SportNation2.Data.Models.Participation", b =>
                {
                    b.HasOne("SportNation2.Data.Models.CompetitionEvent", "CompetitionEvent")
                        .WithMany("Participations")
                        .HasForeignKey("CompetitionEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNation2.Data.Models.User", "User")
                        .WithMany("Participations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompetitionEvent");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportNation2.Data.Models.UserRole", b =>
                {
                    b.HasOne("SportNation2.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportNation2.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportNation2.Data.Models.Competition", b =>
                {
                    b.Navigation("CompetitionEvents");
                });

            modelBuilder.Entity("SportNation2.Data.Models.CompetitionEvent", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("SportNation2.Data.Models.User", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
